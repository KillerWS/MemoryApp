{"ast":null,"code":"var _jsxFileName = \"G:\\\\Learn\\\\FullStack\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useDispatch, useSelector } from 'react-redux'; //Get the current ID of post\n\nconst Form = _ref => {\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  console.log(post);\n  const dispatch = useDispatch();\n  const classes = useStyles(); //从localStorage中获取数据\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]); //到底是写[post]还是[]呢\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      //如果currentId值为0的话创建新帖子\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      //创建新帖子\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n\n    clear(); //dispatch(createPost(postData))\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Please Sign In to create your own memories and like other's memories\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Creating a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator // 设置 creator,加上...postData意味着所有数据都会被保留\n    ,\n    onChange: e => setPostData({ //写法: creator:e.target.value 一改变就会触发OnChange会重置整个数组，但是因为其他属性没有设置所以会只保存creator的设置\n      ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ //...postData,tags:e.target.value\n      //帖子标签的功能，加上split后会变成数组\n      ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }\n  }, \"Clear\"))) //  <Paper className={classes.paper}>\n  //  <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n  //    <Typography variant=\"h6\">Creating a Memory</Typography>\n  //    <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n  //    <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n  //    <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n  //    <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n  //    <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n  //    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n  //    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n  //      </form>\n  //    </Paper>\n  ;\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","createPost","updatePost","useDispatch","useSelector","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","console","log","dispatch","classes","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["G:/Learn/FullStack/client/src/components/Form/Form.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { TextField, Button, Typography,Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles'\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n//Get the current ID of post\r\n\r\nconst Form =({currentId,setCurrentId})=>{\r\n\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  console.log(post)\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  \r\n  //从localStorage中获取数据\r\n  const user=JSON.parse(localStorage.getItem('profile'))\r\n\r\n  useEffect(() => {\r\n    if (post){setPostData(post);}\r\n  }, [post]);\r\n  //到底是写[post]还是[]呢\r\n    \r\n     const handleSubmit=(e)=>{\r\n            e.preventDefault();\r\n            if(currentId===0){\r\n                 //如果currentId值为0的话创建新帖子\r\n                dispatch(createPost({...postData, name: user?.result?.name}))\r\n                clear();\r\n                \r\n            }else{\r\n                //创建新帖子\r\n               \r\n                dispatch(updatePost(currentId,{...postData, name: user?.result?.name}))\r\n                clear();\r\n            }\r\n\r\n            clear();\r\n            //dispatch(createPost(postData))\r\n    };\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n      };\r\n\r\n      if(!user?.result?.name){\r\n        return(\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    Please Sign In to create your own memories and like other's memories \r\n                </Typography>\r\n            </Paper>\r\n        )\r\n      }\r\n\r\n\r\n\r\n    return(\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">Creating a Memory</Typography>\r\n            <TextField \r\n            name=\"creator\" \r\n            variant=\"outlined\" \r\n            label=\"Creator\" \r\n            fullWidth\r\n            value={postData.creator}\r\n            // 设置 creator,加上...postData意味着所有数据都会被保留\r\n            onChange={(e)=>setPostData({\r\n                //写法: creator:e.target.value 一改变就会触发OnChange会重置整个数组，但是因为其他属性没有设置所以会只保存creator的设置\r\n                ...postData,creator:e.target.value\r\n            })}></TextField>\r\n            <TextField \r\n            name=\"title\" \r\n            variant=\"outlined\" \r\n            label=\"Title\" \r\n            fullWidth\r\n            value={postData.title}\r\n            onChange={(e)=>setPostData({\r\n                ...postData,title:e.target.value\r\n            })}></TextField>\r\n            <TextField \r\n            name=\"message\" \r\n            variant=\"outlined\" \r\n            label=\"Message\" \r\n            fullWidth\r\n            value={postData.message}\r\n            onChange={(e)=>setPostData({\r\n                ...postData,message:e.target.value\r\n                \r\n                \r\n            })}></TextField>\r\n            <TextField \r\n            name=\"tags\" \r\n            variant=\"outlined\" \r\n            label=\"Tags\" \r\n            fullWidth\r\n            value={postData.tags}\r\n            onChange={(e)=>setPostData({\r\n                //...postData,tags:e.target.value\r\n                //帖子标签的功能，加上split后会变成数组\r\n                ...postData, tags:e.target.value.split(',')\r\n            })}></TextField>\r\n            <div className={classes.fileInput}>\r\n                <FileBase\r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    onDone={({base64})=>setPostData({...postData,selectedFile:base64})}\r\n                ></FileBase>\r\n\r\n            </div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n           <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n           \r\n            </form>\r\n        </Paper>\r\n    //  <Paper className={classes.paper}>\r\n    //  <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n    //    <Typography variant=\"h6\">Creating a Memory</Typography>\r\n    //    <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n    //    <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n    //    <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n    //    <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n    //    <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n    //    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n    //    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n//      </form>\r\n//    </Paper>\r\n    \r\n    )\r\n}\r\nexport default Form;"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAuCC,KAAvC,QAAoD,mBAApD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC,C,CACA;;AAEA,MAAMC,IAAI,GAAE,QAA4B;EAAA;;EAAA,IAA3B;IAACC,SAAD;IAAWC;EAAX,CAA2B;EAEpC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC;IAAEiB,OAAO,EAAE,EAAX;IAAeC,KAAK,EAAE,EAAtB;IAA0BC,OAAO,EAAE,EAAnC;IAAuCC,IAAI,EAAE,EAA7C;IAAiDC,YAAY,EAAE;EAA/D,CAAD,CAAxC;EACF,MAAMC,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAYV,SAAS,GAAGU,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAkBN,OAAD,IAAaA,OAAO,CAACO,GAAR,KAAgBb,SAA9C,CAAH,GAA8D,IAApF,CAAxB;EACAc,OAAO,CAACC,GAAR,CAAYN,IAAZ;EACA,MAAMO,QAAQ,GAAGnB,WAAW,EAA5B;EACA,MAAMoB,OAAO,GAAGvB,SAAS,EAAzB,CANsC,CAQtC;;EACA,MAAMwB,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAX;EAEAlC,SAAS,CAAC,MAAM;IACd,IAAIqB,IAAJ,EAAS;MAACN,WAAW,CAACM,IAAD,CAAX;IAAmB;EAC9B,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT,CAXsC,CActC;;EAEG,MAAMc,YAAY,GAAEC,CAAD,IAAK;IACjBA,CAAC,CAACC,cAAF;;IACA,IAAGzB,SAAS,KAAG,CAAf,EAAiB;MAAA;;MACZ;MACDgB,QAAQ,CAACrB,UAAU,CAAC,EAAC,GAAGO,QAAJ;QAAcwB,IAAI,EAAER,IAAF,aAAEA,IAAF,uCAAEA,IAAI,CAAES,MAAR,iDAAE,aAAcD;MAAlC,CAAD,CAAX,CAAR;MACAE,KAAK;IAER,CALD,MAKK;MAAA;;MACD;MAEAZ,QAAQ,CAACpB,UAAU,CAACI,SAAD,EAAW,EAAC,GAAGE,QAAJ;QAAcwB,IAAI,EAAER,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAES,MAAR,kDAAE,cAAcD;MAAlC,CAAX,CAAX,CAAR;MACAE,KAAK;IACR;;IAEDA,KAAK,GAdY,CAejB;EACP,CAhBA;;EAkBD,MAAMA,KAAK,GAAG,MAAM;IAChB3B,YAAY,CAAC,CAAD,CAAZ;IACAE,WAAW,CAAC;MAAEC,OAAO,EAAE,EAAX;MAAeC,KAAK,EAAE,EAAtB;MAA0BC,OAAO,EAAE,EAAnC;MAAuCC,IAAI,EAAE,EAA7C;MAAiDC,YAAY,EAAE;IAA/D,CAAD,CAAX;EACD,CAHH;;EAKE,IAAG,EAACU,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAES,MAAP,kDAAC,cAAcD,IAAf,CAAH,EAAuB;IACrB,oBACI,oBAAC,KAAD;MAAO,SAAS,EAAET,OAAO,CAACY,KAA1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAyB,KAAK,EAAC,QAA/B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,0EADJ,CADJ;EAOD;;EAIH,oBACI,oBAAC,KAAD;IAAO,SAAS,EAAEZ,OAAO,CAACY,KAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAM,YAAY,EAAC,KAAnB;IAAyB,UAAU,MAAnC;IAAoC,SAAS,EAAG,GAAEZ,OAAO,CAACa,IAAK,IAAGb,OAAO,CAACc,IAAK,EAA/E;IAAkF,QAAQ,EAAER,YAA5F;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,UAAD;IAAY,OAAO,EAAC,IAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBADA,eAEA,oBAAC,SAAD;IACA,IAAI,EAAC,SADL;IAEA,OAAO,EAAC,UAFR;IAGA,KAAK,EAAC,SAHN;IAIA,SAAS,MAJT;IAKA,KAAK,EAAErB,QAAQ,CAACE,OALhB,CAMA;IANA;IAOA,QAAQ,EAAGoB,CAAD,IAAKrB,WAAW,CAAC,EACvB;MACA,GAAGD,QAFoB;MAEXE,OAAO,EAACoB,CAAC,CAACQ,MAAF,CAASC;IAFN,CAAD,CAP1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFA,eAaA,oBAAC,SAAD;IACA,IAAI,EAAC,OADL;IAEA,OAAO,EAAC,UAFR;IAGA,KAAK,EAAC,OAHN;IAIA,SAAS,MAJT;IAKA,KAAK,EAAE/B,QAAQ,CAACG,KALhB;IAMA,QAAQ,EAAGmB,CAAD,IAAKrB,WAAW,CAAC,EACvB,GAAGD,QADoB;MACXG,KAAK,EAACmB,CAAC,CAACQ,MAAF,CAASC;IADJ,CAAD,CAN1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAbA,eAsBA,oBAAC,SAAD;IACA,IAAI,EAAC,SADL;IAEA,OAAO,EAAC,UAFR;IAGA,KAAK,EAAC,SAHN;IAIA,SAAS,MAJT;IAKA,KAAK,EAAE/B,QAAQ,CAACI,OALhB;IAMA,QAAQ,EAAGkB,CAAD,IAAKrB,WAAW,CAAC,EACvB,GAAGD,QADoB;MACXI,OAAO,EAACkB,CAAC,CAACQ,MAAF,CAASC;IADN,CAAD,CAN1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAtBA,eAiCA,oBAAC,SAAD;IACA,IAAI,EAAC,MADL;IAEA,OAAO,EAAC,UAFR;IAGA,KAAK,EAAC,MAHN;IAIA,SAAS,MAJT;IAKA,KAAK,EAAE/B,QAAQ,CAACK,IALhB;IAMA,QAAQ,EAAGiB,CAAD,IAAKrB,WAAW,CAAC,EACvB;MACA;MACA,GAAGD,QAHoB;MAGVK,IAAI,EAACiB,CAAC,CAACQ,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB;IAHK,CAAD,CAN1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAjCA,eA4CA;IAAK,SAAS,EAAEjB,OAAO,CAACkB,SAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IACI,IAAI,EAAC,MADT;IAEI,QAAQ,EAAE,KAFd;IAGI,MAAM,EAAE;MAAA,IAAC;QAACC;MAAD,CAAD;MAAA,OAAYjC,WAAW,CAAC,EAAC,GAAGD,QAAJ;QAAaM,YAAY,EAAC4B;MAA1B,CAAD,CAAvB;IAAA,CAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CA5CA,eAoDJ,oBAAC,MAAD;IAAQ,SAAS,EAAEnB,OAAO,CAACoB,YAA3B;IAAyC,OAAO,EAAC,WAAjD;IAA6D,KAAK,EAAC,SAAnE;IAA6E,IAAI,EAAC,OAAlF;IAA0F,IAAI,EAAC,QAA/F;IAAwG,SAAS,MAAjH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YApDI,eAqDD,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,KAAK,EAAC,WAAlC;IAA8C,IAAI,EAAC,OAAnD;IAA2D,OAAO,EAAET,KAApE;IAA2E,SAAS,MAApF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WArDC,CADJ,CADJ,CA2DA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;EACA;EAtEI;AAyEH,CA5HD;;AA6HA,eAAe7B,IAAf"},"metadata":{},"sourceType":"module"}