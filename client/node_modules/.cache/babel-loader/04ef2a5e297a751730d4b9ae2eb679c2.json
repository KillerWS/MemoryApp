{"ast":null,"code":"import _slicedToArray from\"E:\\\\Learn\\\\FullStack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import Posts from\"../Posts/Posts\";import Form from'../Form/Form';import{Container,Grow,Grid}from'@material-ui/core';import React,{useState,useEffect}from\"react\";import{useDispatch}from\"react-redux\";import{getPosts}from'../../actions/posts';var Home=function Home(){var dispatch=useDispatch();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentId=_useState2[0],setCurrentId=_useState2[1];//React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。\n//接受第二个参数来控制跳过执行，下次 render 后如果指定的值没有变化就不会执行，这里是dispatch\nuseEffect(function(){dispatch(getPosts());},[dispatch]);//test如下，不写action,直接dispatch：\n// useEffect(()=>{\n//     console.log('不写action,直接dispatch')\n//     dispatch({type:})\n// })\n//,[currentId,dispatch]\nreturn/*#__PURE__*/React.createElement(Grow,{in:true},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{container:true,justifyContent:\"space-between\",alignItems:\"stretch\",spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:7},/*#__PURE__*/React.createElement(Posts,{setCurrentId:setCurrentId})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:4},/*#__PURE__*/React.createElement(Form,{currentId:currentId,setCurrentId:setCurrentId})))));};export default Home;","map":{"version":3,"names":["Posts","Form","Container","Grow","Grid","React","useState","useEffect","useDispatch","getPosts","Home","dispatch","currentId","setCurrentId"],"sources":["E:/Learn/FullStack/client/src/components/Home/Home.js"],"sourcesContent":["import Posts from \"../Posts/Posts\";\r\nimport Form from '../Form/Form'\r\nimport {Container ,Grow,Grid} from '@material-ui/core'\r\nimport React,{useState,useEffect} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getPosts} from '../../actions/posts'\r\n\r\n\r\nconst Home = () => {\r\n    \r\n    const dispatch =useDispatch();\r\n    const [currentId, setCurrentId]=useState(0);\r\n\r\n\r\n    //React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。\r\n    //接受第二个参数来控制跳过执行，下次 render 后如果指定的值没有变化就不会执行，这里是dispatch\r\n    useEffect(()=>{\r\n        dispatch(getPosts());\r\n    },[dispatch])\r\n    \r\n    //test如下，不写action,直接dispatch：\r\n    // useEffect(()=>{\r\n    //     console.log('不写action,直接dispatch')\r\n    //     dispatch({type:})\r\n    // })\r\n\r\n    //,[currentId,dispatch]\r\n  return (\r\n    <Grow in >\r\n        <Container>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n    \r\n            <Grid item xs={12} sm={7} >\r\n                {/* 要去在form和posts之间共享帖子的currentId所以要去父组件:App */}\r\n                <Posts setCurrentId={setCurrentId}/>\r\n                \r\n            </Grid >\r\n            <Grid item xs={12} sm={4} >\r\n                {/* Form 组件 */}\r\n                <Form currentId={currentId}  setCurrentId={setCurrentId}/>\r\n               \r\n            </Grid >\r\n\r\n\r\n        </Grid>\r\n        </Container>\r\n\r\n\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":"wJAAA,MAAOA,MAAP,KAAkB,gBAAlB,CACA,MAAOC,KAAP,KAAiB,cAAjB,CACA,OAAQC,SAAR,CAAmBC,IAAnB,CAAwBC,IAAxB,KAAmC,mBAAnC,CACA,MAAOC,MAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CAEA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAAQC,QAAR,KAAuB,qBAAvB,CAGA,GAAMC,KAAI,CAAG,QAAPA,KAAO,EAAM,CAEf,GAAMC,SAAQ,CAAEH,WAAW,EAA3B,CACA,cAAgCF,QAAQ,CAAC,CAAD,CAAxC,wCAAOM,SAAP,eAAkBC,YAAlB,eAGA;AACA;AACAN,SAAS,CAAC,UAAI,CACVI,QAAQ,CAACF,QAAQ,EAAT,CAAR,CACH,CAFQ,CAEP,CAACE,QAAD,CAFO,CAAT,CAIA;AACA;AACA;AACA;AACA;AAEA;AACF,mBACE,oBAAC,IAAD,EAAM,EAAE,KAAR,eACI,oBAAC,SAAD,mBACA,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,cAAc,CAAC,eAA/B,CAA+C,UAAU,CAAC,SAA1D,CAAoE,OAAO,CAAE,CAA7E,eAEI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,eAEI,oBAAC,KAAD,EAAO,YAAY,CAAEE,YAArB,EAFJ,CAFJ,cAOI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,eAEI,oBAAC,IAAD,EAAM,SAAS,CAAED,SAAjB,CAA6B,YAAY,CAAEC,YAA3C,EAFJ,CAPJ,CADA,CADJ,CADF,CAuBD,CA1CD,CA4CA,cAAeH,KAAf"},"metadata":{},"sourceType":"module"}