{"ast":null,"code":"import _objectSpread from\"E:\\\\Learn\\\\FullStack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{AUTH,LOGOUT}from'../constants/actionTypes';//state可以指定为空初始化（缺省值）\n//因为state要被转换为posts，所以直接全写成posts\n// export default (state=[],action) => {\n//     ...\n//     ...\n// }\n//reducer函数不用直接使用，它会在dispatch函数中调用!!!\n// reducer接受state和action并返回新的state\nvar authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{authData:null};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case AUTH:console.log('This is reducer auth');//把数据存储在localstorage里\n//1、localStorage拓展了cookie的4K限制；\n//2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的，针对于前端页面的数据库。\nlocalStorage.setItem('profile',JSON.stringify(_objectSpread({},action===null||action===void 0?void 0:action.data)));return _objectSpread(_objectSpread({},state),{},{authData:action===null||action===void 0?void 0:action.data});case LOGOUT://localStorage.removeItem('profile')\nlocalStorage.clear();return _objectSpread(_objectSpread({},state),{},{authData:action===null||action===void 0?void 0:action.data});default:return state;}};export default authReducer;","map":{"version":3,"names":["AUTH","LOGOUT","authReducer","state","authData","action","type","console","log","localStorage","setItem","JSON","stringify","data","clear"],"sources":["E:/Learn/FullStack/client/src/reducers/auth.js"],"sourcesContent":["import { AUTH, LOGOUT } from '../constants/actionTypes';\r\n//state可以指定为空初始化（缺省值）\r\n//因为state要被转换为posts，所以直接全写成posts\r\n// export default (state=[],action) => {\r\n//     ...\r\n//     ...\r\n// }\r\n\r\n\r\n//reducer函数不用直接使用，它会在dispatch函数中调用!!!\r\n// reducer接受state和action并返回新的state\r\n\r\n const authReducer=(state={authData:null}, action) => {\r\n    switch (action.type) {\r\n      case AUTH:\r\n        console.log('This is reducer auth')\r\n        //把数据存储在localstorage里\r\n        //1、localStorage拓展了cookie的4K限制；\r\n        //2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的，针对于前端页面的数据库。\r\n        localStorage.setItem('profile', JSON.stringify({...action?.data}))\r\n        \r\n        return {...state, authData:action?.data}\r\n      \r\n      case LOGOUT:\r\n        //localStorage.removeItem('profile')\r\n        localStorage.clear()\r\n        return {...state, authData:action?.data}\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default authReducer"],"mappings":"uJAAA,OAASA,IAAT,CAAeC,MAAf,KAA6B,0BAA7B,CACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEC,GAAMC,YAAW,CAAC,QAAZA,YAAY,EAAmC,IAAlCC,MAAkC,2DAA5B,CAACC,QAAQ,CAAC,IAAV,CAA4B,IAAXC,OAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,KAAL,CACEO,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACA;AACA;AACA;AACAC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgCC,IAAI,CAACC,SAAL,kBAAmBP,MAAnB,SAAmBA,MAAnB,iBAAmBA,MAAM,CAAEQ,IAA3B,EAAhC,EAEA,sCAAWV,KAAX,MAAkBC,QAAQ,CAACC,MAAD,SAACA,MAAD,iBAACA,MAAM,CAAEQ,IAAnC,GAEF,IAAKZ,OAAL,CACE;AACAQ,YAAY,CAACK,KAAb,GACA,sCAAWX,KAAX,MAAkBC,QAAQ,CAACC,MAAD,SAACA,MAAD,iBAACA,MAAM,CAAEQ,IAAnC,GAEF,QACE,MAAOV,MAAP,CAhBJ,CAkBD,CAnBF,CAqBD,cAAeD,YAAf"},"metadata":{},"sourceType":"module"}