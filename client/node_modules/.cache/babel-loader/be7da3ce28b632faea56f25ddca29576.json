{"ast":null,"code":"import _slicedToArray from\"E:\\\\Learn\\\\FullStack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Link}from'react-router-dom';import{AppBar,Avatar,Button,Toolbar,Typography}from'@material-ui/core';import useStyles from'./styles';import memories from'../../images/memories.jpg';import{useDispatch}from'react-redux';import{useNavigate,useLocation}from'react-router-dom';var Navbar=function Navbar(){var classes=useStyles();var dispatch=useDispatch();var naviage=useNavigate();var location=useLocation();//通常可以尝试zai Navbar添加user读取数据进行交互\nvar _useState=useState(JSON.parse(localStorage.getItem('profile'))),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];console.log(user);var Logout=function Logout(){dispatch({type:'LOGOUT'});naviage('/');setUser(null);};//useEffect第二个参数：useEffect 是 componentDidMount，componentDidUpdate 和 componentWillUnmount 三者的结合\n//所以他的作用就是组件初始化，组件卸载，组件每次更新时执行\n//而每次更新都执行会有多余的不必要执行，所以就有了第二个参数数组每次update的时候这个数组里值变化了就会执行，但这只是update阶段，初始化还是会执行\nuseEffect(function(){var token=user===null||user===void 0?void 0:user.token;//每次渲染组件检查token是否expired\n//JWT...\nsetUser(JSON.parse(localStorage.getItem('profile')));// },[localStorage.getItem('profile')])\n},[location]);return/*#__PURE__*/React.createElement(AppBar,{className:classes.appBar,position:\"static\",color:\"inherit\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.brandContainer},/*#__PURE__*/React.createElement(Typography,{component:Link,to:\"/\",className:classes.heading,varaint:\"h2\",align:\"center\"},\"Memories\"),/*#__PURE__*/React.createElement(\"img\",{className:classes.image,src:memories,alt:\"memories\",height:\"60\"})),/*#__PURE__*/React.createElement(Toolbar,{className:classes.toolbar},user?/*#__PURE__*/React.createElement(\"div\",{className:classes.profile},/*#__PURE__*/React.createElement(Avatar,{className:classes.purple,alt:user===null||user===void 0?void 0:user.result.name,src:user===null||user===void 0?void 0:user.result.imageUrl},user===null||user===void 0?void 0:user.result.name.charAt(0)),/*#__PURE__*/React.createElement(Typography,{className:classes.userName,variant:\"h6\"},user===null||user===void 0?void 0:user.result.name),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",className:classes.logout,color:\"secondary\",onClick:Logout},\"Logout\")):/*#__PURE__*/React.createElement(Button,{component:Link,to:\"/auth\",variant:\"contained\",color:\"primary\"},\"Sign In\")));};export default Navbar;","map":{"version":3,"names":["React","useEffect","useState","Link","AppBar","Avatar","Button","Toolbar","Typography","useStyles","memories","useDispatch","useNavigate","useLocation","Navbar","classes","dispatch","naviage","location","JSON","parse","localStorage","getItem","user","setUser","console","log","Logout","type","token","appBar","brandContainer","heading","image","toolbar","profile","purple","result","name","imageUrl","charAt","userName","logout"],"sources":["E:/Learn/FullStack/client/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {AppBar,Avatar,Button,Toolbar,Typography} from '@material-ui/core'\r\nimport useStyles from './styles'\r\nimport memories from '../../images/memories.jpg'\r\nimport {useDispatch} from 'react-redux'\r\nimport { useNavigate,useLocation } from 'react-router-dom'\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const dispatch=useDispatch()\r\n    const naviage=useNavigate()\r\n    const location=useLocation()\r\n    \r\n    //通常可以尝试zai Navbar添加user读取数据进行交互\r\n    const [user,setUser]=useState(JSON.parse(localStorage.getItem('profile')))\r\n    console.log(user)\r\n    \r\n    const Logout=()=>{\r\n        dispatch({type:'LOGOUT'})\r\n        naviage('/')\r\n        setUser(null)\r\n    }\r\n\r\n    //useEffect第二个参数：useEffect 是 componentDidMount，componentDidUpdate 和 componentWillUnmount 三者的结合\r\n//所以他的作用就是组件初始化，组件卸载，组件每次更新时执行\r\n//而每次更新都执行会有多余的不必要执行，所以就有了第二个参数数组每次update的时候这个数组里值变化了就会执行，但这只是update阶段，初始化还是会执行\r\n    useEffect(()=>{\r\n        const token=user?.token;\r\n        //每次渲染组件检查token是否expired\r\n        //JWT...\r\n        setUser(JSON.parse(localStorage.getItem('profile')))\r\n    // },[localStorage.getItem('profile')])\r\n  },[location])\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n            <div className={classes.brandContainer} >\r\n            <Typography component={Link} to=\"/\" className={classes.heading} varaint=\"h2\" align=\"center\">Memories</Typography>\r\n            <img className={classes.image} src={memories} alt=\"memories\" height=\"60\"></img>\r\n            </div>\r\n            \r\n\r\n            <Toolbar className={classes.toolbar}>\r\n\r\n                {/* 如果登录就展示sth */}\r\n        {user?(\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={Logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n\r\n        </AppBar>\r\n  )\r\n}\r\n\r\nexport default Navbar"],"mappings":"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"},"metadata":{},"sourceType":"module"}