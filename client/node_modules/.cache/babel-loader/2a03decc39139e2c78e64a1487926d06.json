{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learn\\\\FullStack\\\\client\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport Posts from \"./components/Posts/Posts\";\nimport Form from './components/Form/Form';\nimport { Container, Grow, Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport useStyles from './styles';\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from '../../actions/posts';\n\nconst Home = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [currentId, setCurrentId] = useState(0); //React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。\n  //接受第二个参数来控制跳过执行，下次 render 后如果指定的值没有变化就不会执行，这里是dispatch\n\n  useEffect(() => {\n    console.log(\"useEffect执行\");\n    dispatch(getPosts());\n  }, [dispatch]); //,[currentId,dispatch]\n\n  return /*#__PURE__*/React.createElement(Grow, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.mainContainer,\n    container: true,\n    justifyContent: \"space-between\",\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    currentId: currentId,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Home;","map":{"version":3,"names":["Posts","Form","Container","Grow","Grid","React","useState","useEffect","useStyles","useDispatch","getPosts","Home","classes","dispatch","currentId","setCurrentId","console","log","mainContainer"],"sources":["E:/Learn/FullStack/client/src/components/Home/Home.js"],"sourcesContent":["import Posts from \"./components/Posts/Posts\";\r\nimport Form from './components/Form/Form'\r\nimport {Container ,Grow,Grid} from '@material-ui/core'\r\nimport React,{useState,useEffect} from \"react\";\r\n\r\nimport useStyles from './styles'\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getPosts} from '../../actions/posts'\r\n\r\n\r\nconst Home = () => {\r\n    const classes =useStyles()\r\n    const dispatch =useDispatch();\r\n    const [currentId, setCurrentId]=useState(0);\r\n    //React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。\r\n    //接受第二个参数来控制跳过执行，下次 render 后如果指定的值没有变化就不会执行，这里是dispatch\r\n    useEffect(()=>{\r\n        console.log(\"useEffect执行\")\r\n        dispatch(getPosts());\r\n    },[dispatch])\r\n    //,[currentId,dispatch]\r\n  return (\r\n    <Grow in >\r\n        <Container>\r\n        <Grid className={classes.mainContainer} container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n    \r\n            <Grid item xs={12} sm={7} >\r\n                {/* 要去在form和posts之间共享帖子的currentId所以要去父组件:App */}\r\n                <Posts setCurrentId={setCurrentId}/>\r\n                \r\n            </Grid >\r\n            <Grid item xs={12} sm={4} >\r\n                <Form currentId={currentId}  setCurrentId={setCurrentId}/>\r\n               \r\n            </Grid >\r\n\r\n\r\n        </Grid>\r\n        </Container>\r\n\r\n\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAwBC,IAAxB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;;AAGA,MAAMC,IAAI,GAAG,MAAM;EACf,MAAMC,OAAO,GAAEJ,SAAS,EAAxB;EACA,MAAMK,QAAQ,GAAEJ,WAAW,EAA3B;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA0BT,QAAQ,CAAC,CAAD,CAAxC,CAHe,CAIf;EACA;;EACAC,SAAS,CAAC,MAAI;IACVS,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAJ,QAAQ,CAACH,QAAQ,EAAT,CAAR;EACH,CAHQ,EAGP,CAACG,QAAD,CAHO,CAAT,CANe,CAUf;;EACF,oBACE,oBAAC,IAAD;IAAM,EAAE,MAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,IAAD;IAAM,SAAS,EAAED,OAAO,CAACM,aAAzB;IAAwC,SAAS,MAAjD;IAAkD,cAAc,EAAC,eAAjE;IAAiF,UAAU,EAAC,SAA5F;IAAsG,OAAO,EAAE,CAA/G;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI,oBAAC,KAAD;IAAO,YAAY,EAAEH,YAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAFJ,eAOI,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,SAAS,EAAED,SAAjB;IAA6B,YAAY,EAAEC,YAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAPJ,CADA,CADJ,CADF;AAsBD,CAjCD;;AAmCA,eAAeJ,IAAf"},"metadata":{},"sourceType":"module"}