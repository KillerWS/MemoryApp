{"ast":null,"code":"import _objectSpread from\"E:\\\\Learn\\\\FullStack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:\\\\Learn\\\\FullStack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import FileBase from'react-file-base64';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';import{useDispatch,useSelector}from'react-redux';//Get the current ID of post\nvar Form=function Form(_ref){var _user$result3;var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var errorinfo=true;var _useState=useState({title:'',message:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.find(function(message){return message._id===currentId;}):null;});console.log(post);var dispatch=useDispatch();var classes=useStyles();//从localStorage中获取数据\nvar user=JSON.parse(localStorage.getItem('profile'));useEffect(function(){if(post){setPostData(post);}},[post]);//到底是写[post]还是[]呢\nvar handleSubmit=function handleSubmit(e){e.preventDefault();if(currentId===0){var _user$result;//如果currentId值为0的话创建新帖子\ndispatch(createPost(_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result=user.result)===null||_user$result===void 0?void 0:_user$result.name})));clear();}else{var _user$result2;//创建新帖子\ndispatch(updatePost(currentId,_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result2=user.result)===null||_user$result2===void 0?void 0:_user$result2.name})));clear();}clear();//dispatch(createPost(postData))\n};var clear=function clear(){setCurrentId(0);setPostData({title:'',message:'',tags:'',selectedFile:''});};if(!(user===null||user===void 0?void 0:(_user$result3=user.result)===null||_user$result3===void 0?void 0:_user$result3.name)){return/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",align:\"center\"},\"Please Sign In to create your own memories and like other's memories\"));}return/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},\"Creating a Memory\"),/*#__PURE__*/React.createElement(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",multiline:true,rows:6,maxRows:10,fullWidth:true,value:postData.message,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));},helperText:false?\"Incorrect entry.\":\"\"}),/*#__PURE__*/React.createElement(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/React.createElement(\"div\",{className:classes.fileInput},/*#__PURE__*/React.createElement(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref2){var base64=_ref2.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})),/*#__PURE__*/React.createElement(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true},\"Clear\")))//  <Paper className={classes.paper}>\n//  <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n//    <Typography variant=\"h6\">Creating a Memory</Typography>\n//    <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n//    <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n//    <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n//    <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n//    <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n//    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n//    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n//      </form>\n//    </Paper>\n;};export default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","createPost","updatePost","useDispatch","useSelector","Form","currentId","setCurrentId","errorinfo","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","_id","console","log","dispatch","classes","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["E:/Learn/FullStack/client/src/components/Form/Form.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { TextField, Button, Typography,Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles'\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n//Get the current ID of post\r\n\r\nconst Form =({currentId,setCurrentId})=>{\r\n\r\n    const errorinfo =true;\r\n\r\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  console.log(post)\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  \r\n  //从localStorage中获取数据\r\n  const user=JSON.parse(localStorage.getItem('profile'))\r\n\r\n  useEffect(() => {\r\n    if (post){setPostData(post);}\r\n  }, [post]);\r\n  //到底是写[post]还是[]呢\r\n    \r\n     const handleSubmit=(e)=>{\r\n            e.preventDefault();\r\n            if(currentId===0){\r\n                 //如果currentId值为0的话创建新帖子\r\n                dispatch(createPost({...postData, name: user?.result?.name}))\r\n                clear();\r\n                \r\n            }else{\r\n                //创建新帖子\r\n               \r\n                dispatch(updatePost(currentId,{...postData, name: user?.result?.name}))\r\n                clear();\r\n            }\r\n\r\n            clear();\r\n            //dispatch(createPost(postData))\r\n    };\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({  title: '', message: '', tags: '', selectedFile: '' });\r\n      };\r\n\r\n      if(!user?.result?.name){\r\n        return(\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    Please Sign In to create your own memories and like other's memories \r\n                </Typography>\r\n            </Paper>\r\n        )\r\n      }\r\n\r\n\r\n\r\n    return(\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">Creating a Memory</Typography>\r\n            \r\n            \r\n            {/* <TextField \r\n            name=\"creator\" \r\n            variant=\"outlined\" \r\n            label=\"Creator\" \r\n            fullWidth\r\n            value={postData.creator}\r\n            // 设置 creator,加上...postData意味着所有数据都会被保留\r\n            onChange={(e)=>setPostData({\r\n                //写法: creator:e.target.value 一改变就会触发OnChange会重置整个数组，但是因为其他属性没有设置所以会只保存creator的设置\r\n                ...postData,creator:e.target.value\r\n            })}></TextField> */}\r\n\r\n\r\n            <TextField \r\n            name=\"title\" \r\n            variant=\"outlined\" \r\n            label=\"Title\" \r\n            fullWidth\r\n            value={postData.title}\r\n            onChange={(e)=>setPostData({\r\n                ...postData,title:e.target.value\r\n            })}></TextField>\r\n            <TextField \r\n            name=\"message\" \r\n            variant=\"outlined\" \r\n            label=\"Message\"\r\n            multiline\r\n            rows={6}\r\n            maxRows={10} \r\n            fullWidth\r\n            value={postData.message}\r\n            onChange={(e)=>setPostData({\r\n                ...postData,message:e.target.value\r\n                \r\n                \r\n            })}\r\n            helperText={false?\"Incorrect entry.\":\"\"}\r\n            ></TextField>\r\n            <TextField \r\n            name=\"tags\" \r\n            variant=\"outlined\" \r\n            label=\"Tags\" \r\n            fullWidth\r\n            value={postData.tags}\r\n            onChange={(e)=>setPostData({\r\n                //...postData,tags:e.target.value\r\n                //帖子标签的功能，加上split后会变成数组\r\n                ...postData, tags:e.target.value.split(',')\r\n            })}></TextField>\r\n            <div className={classes.fileInput}>\r\n                <FileBase\r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    onDone={({base64})=>setPostData({...postData,selectedFile:base64})}\r\n                ></FileBase>\r\n\r\n            </div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n           <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n           \r\n            </form>\r\n        </Paper>\r\n    //  <Paper className={classes.paper}>\r\n    //  <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n    //    <Typography variant=\"h6\">Creating a Memory</Typography>\r\n    //    <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n    //    <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n    //    <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n    //    <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n    //    <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n    //    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n    //    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n//      </form>\r\n//    </Paper>\r\n    \r\n    )\r\n}\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}