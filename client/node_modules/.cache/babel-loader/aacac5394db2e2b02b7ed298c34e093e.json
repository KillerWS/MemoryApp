{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learn\\\\FullStack\\\\client\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport Posts from \"../Posts/Posts\";\nimport Form from '../Form/Form';\nimport { Container, Grow, Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from '../../actions/posts';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [currentId, setCurrentId] = useState(0); //React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。\n  //接受第二个参数来控制跳过执行，下次 render 后如果指定的值没有变化就不会执行，这里是dispatch\n\n  /*\r\n  useEffect(()=>{\r\n      console.log(\"useEffect执行\")\r\n      dispatch(getPosts());\r\n  },[dispatch])\r\n  */\n  //test如下，不写action,直接dispatch：\n  // useEffect(()=>{\n  //     console.log('不写action,直接dispatch')\n  //     dispatch({type:})\n  // })\n  //,[currentId,dispatch]\n\n  return /*#__PURE__*/React.createElement(Grow, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"space-between\",\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    currentId: currentId,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Home;","map":{"version":3,"names":["Posts","Form","Container","Grow","Grid","React","useState","useEffect","useDispatch","getPosts","Home","dispatch","currentId","setCurrentId"],"sources":["E:/Learn/FullStack/client/src/components/Home/Home.js"],"sourcesContent":["import Posts from \"../Posts/Posts\";\r\nimport Form from '../Form/Form'\r\nimport {Container ,Grow,Grid} from '@material-ui/core'\r\nimport React,{useState,useEffect} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getPosts} from '../../actions/posts'\r\n\r\n\r\nconst Home = () => {\r\n    \r\n    const dispatch =useDispatch();\r\n    const [currentId, setCurrentId]=useState(0);\r\n    //React 会保存你传递的函数（我们将它称之为 “effect”），并且在执行 DOM 更新之后调用它。\r\n    //接受第二个参数来控制跳过执行，下次 render 后如果指定的值没有变化就不会执行，这里是dispatch\r\n    \r\n    /*\r\n    useEffect(()=>{\r\n        console.log(\"useEffect执行\")\r\n        dispatch(getPosts());\r\n    },[dispatch])\r\n    */\r\n    //test如下，不写action,直接dispatch：\r\n    // useEffect(()=>{\r\n    //     console.log('不写action,直接dispatch')\r\n    //     dispatch({type:})\r\n    // })\r\n\r\n    //,[currentId,dispatch]\r\n  return (\r\n    <Grow in >\r\n        <Container>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n    \r\n            <Grid item xs={12} sm={7} >\r\n                {/* 要去在form和posts之间共享帖子的currentId所以要去父组件:App */}\r\n                <Posts setCurrentId={setCurrentId}/>\r\n                \r\n            </Grid >\r\n            <Grid item xs={12} sm={4} >\r\n                <Form currentId={currentId}  setCurrentId={setCurrentId}/>\r\n               \r\n            </Grid >\r\n\r\n\r\n        </Grid>\r\n        </Container>\r\n\r\n\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAwBC,IAAxB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAEf,MAAMC,QAAQ,GAAEH,WAAW,EAA3B;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA0BP,QAAQ,CAAC,CAAD,CAAxC,CAHe,CAIf;EACA;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;EACA;EACA;EAEA;;EACF,oBACE,oBAAC,IAAD;IAAM,EAAE,MAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,cAAc,EAAC,eAA/B;IAA+C,UAAU,EAAC,SAA1D;IAAoE,OAAO,EAAE,CAA7E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI,oBAAC,KAAD;IAAO,YAAY,EAAEO,YAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAFJ,eAOI,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAmB,EAAE,EAAE,CAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,SAAS,EAAED,SAAjB;IAA6B,YAAY,EAAEC,YAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAPJ,CADA,CADJ,CADF;AAsBD,CA1CD;;AA4CA,eAAeH,IAAf"},"metadata":{},"sourceType":"module"}